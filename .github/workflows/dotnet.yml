name: EcommerceMicroservices CI/CD

on:
  push:
    branches: [ "main", "develop" ]
    paths:
      - 'src/**'
      - '.github/workflows/**'
      - 'src/docker-compose*.yml'
  pull_request:
    branches: [ "main", "develop" ]

env:
  DOTNET_VERSION: '9.0.x'
  REGISTRY: ghcr.io
  REGISTRY_USERNAME: ${{ github.actor }}
  SOLUTION_PATH: src/EcommerceMicroservices.sln
  DOCKER_COMPOSE_PATH: src/docker-compose.yml
  DOCKER_COMPOSE_OVERRIDE_PATH: src/docker-compose.override.yml

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Set lowercase repository name
        run: |
          echo "REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Restore Dependencies
        run: dotnet restore ${{ env.SOLUTION_PATH }}

      - name: Build Solution
        run: dotnet build ${{ env.SOLUTION_PATH }} --configuration Release --no-restore

      - name: Run Tests
        run: dotnet test ${{ env.SOLUTION_PATH }} --configuration Release --no-build

  docker:
    name: Build and Push Docker Images
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set lowercase repository name
        run: |
          echo "REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Catalog API
        uses: docker/build-push-action@v5
        with:
          context: ./src
          file: ./src/Services/Catalog.API/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REPO_NAME }}/catalog-api:latest
            ${{ env.REGISTRY }}/${{ env.REPO_NAME }}/catalog-api:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and Push Basket API
        uses: docker/build-push-action@v5
        with:
          context: ./src
          file: ./src/Services/Basket.API/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REPO_NAME }}/basket-api:latest
            ${{ env.REGISTRY }}/${{ env.REPO_NAME }}/basket-api:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-dev:
    name: Deploy to Development
    needs: docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    environment:
      name: development
      url: http://localhost:6000

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set lowercase repository name
        run: |
          echo "REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Update Docker Compose
        run: |
          sed -i "s|image:.*catalogapi.*|image: ${{ env.REGISTRY }}/${{ env.REPO_NAME }}/catalog-api:${{ github.sha }}|g" ${{ env.DOCKER_COMPOSE_PATH }}
          sed -i "s|image:.*basketapi.*|image: ${{ env.REGISTRY }}/${{ env.REPO_NAME }}/basket-api:${{ github.sha }}|g" ${{ env.DOCKER_COMPOSE_PATH }}

      - name: Deploy to Development
        id: deploy
        run: |
          echo "Deploying to development environment"
          docker-compose -f ${{ env.DOCKER_COMPOSE_PATH }} -f ${{ env.DOCKER_COMPOSE_OVERRIDE_PATH }} up -d
          echo "CATALOG_URL=http://localhost:6000" >> $GITHUB_OUTPUT
          echo "BASKET_URL=http://localhost:6001" >> $GITHUB_OUTPUT

  deploy-prod:
    name: Deploy to Production
    needs: docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
      url: http://localhost:6000

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set lowercase repository name
        run: |
          echo "REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Update Docker Compose
        run: |
          sed -i "s|image:.*catalogapi.*|image: ${{ env.REGISTRY }}/${{ env.REPO_NAME }}/catalog-api:${{ github.sha }}|g" ${{ env.DOCKER_COMPOSE_PATH }}
          sed -i "s|image:.*basketapi.*|image: ${{ env.REGISTRY }}/${{ env.REPO_NAME }}/basket-api:${{ github.sha }}|g" ${{ env.DOCKER_COMPOSE_PATH }}

      - name: Deploy to Production
        id: deploy
        run: |
          echo "Deploying to production environment"
          docker-compose -f ${{ env.DOCKER_COMPOSE_PATH }} -f ${{ env.DOCKER_COMPOSE_OVERRIDE_PATH }} up -d
          echo "CATALOG_URL=http://localhost:6000" >> $GITHUB_OUTPUT
          echo "BASKET_URL=http://localhost:6001" >> $GITHUB_OUTPUT
